name: network-manager
version: 1.46.0-1-dev
summary: Network Manager
description: |
  NetworkManager is a system network service that manages your network
  devices and connections, attempting to keep active network connectivity
  when available. It manages ethernet, WiFi, mobile broadband (WWAN) and
  PPPoE devices, provides VPN integration with a variety of different
  VPN services.
  Please find the source code for this track at:
    https://code.launchpad.net/~snappy-hwe-team/snappy-hwe-snaps/+git/network-manager/+ref/snap-24
base: core24
confinement: strict
grade: stable

# Since the uc20+ network-manager snap currently defaults to the native
# netplan config plugin, the default format of connection files has
# switched from keyfile to netplan, thus a fresh from earlier tracks
# of network-manager will not work w/out post-refresh hook support to
# handle conversion of system connection files. For this reason, this
# version of the network-manager snap declares the epoch 1. If/when
# support is added to convert from keyfile to netplan, then the epoch
# will be adjusted accordingly.
epoch: 1

slots:
  service: network-manager

plugs:
  nmcli: network-manager
  wpa:
    interface: dbus
    bus: system
    name: fi.w1.wpa_supplicant1
  vpn-creds:
    interface: content
    content: vpn_creds
    target: $SNAP_COMMON/vpn_creds

# As we need netplan Generate from the remove hook
assumes:
  - snapd2.54

hooks:
  configure:
    plugs:
      # network is needed to avoid some denials when using snapctl
      - network
      - network-setup-observe
  remove:
    plugs:
      - network-setup-control

layout:
  /usr/lib/NetworkManager:
    bind: $SNAP/usr/lib/NetworkManager
  /etc/NetworkManager:
    # Using 'conf' to keep compatibility with older NM snaps. Another option
    # would be to copy around the systems connections when refreshing.
    bind: $SNAP_DATA/conf
  /var/lib/NetworkManager:
    bind: $SNAP_DATA/var/lib/NetworkManager
  /usr/sbin/openvpn:
    symlink: $SNAP/usr/sbin/openvpn
  /usr/libexec/nm-openvpn-service:
    symlink: $SNAP/usr/libexec/nm-openvpn-service
  /usr/libexec/nm-openvpn-service-openvpn-helper:
    symlink: $SNAP/usr/libexec/nm-openvpn-service-openvpn-helper
  # So nm-openvpn-service-openvpn-helper can find it (env including
  # LD_LIBRARY_PATH is not passed down by openvpn).
  /usr/lib/libnm.so.0:
    symlink: $SNAP/usr/lib/libnm.so.0

apps:
  nmcli:
    command: usr/bin/nmcli
    plugs: [nmcli]
  nmtui:
    command: usr/bin/nmtui
    plugs: [nmcli]
  nmtui-connect:
    command: usr/bin/nmtui-connect
    plugs: [nmcli]
  nmtui-edit:
    command: usr/bin/nmtui-edit
    plugs: [nmcli]
  nmtui-hostname:
    command: usr/bin/nmtui-hostname
    plugs: [nmcli]
  networkmanager:
    command: bin/networkmanager
    daemon: simple
    slots: [service]
    plugs: [modem-manager, ppp, network-setup-observe, wpa, firewall-control,
            hardware-observe, network-setup-control, login-session-observe,
            network-observe, network-control]

parts:
  networkmanager-common:
    plugin: dump
    source: snap-common

  changelog:
    plugin: nil
    override-build: |
      cp "$CRAFT_PROJECT_DIR"/ChangeLog "$CRAFT_PART_INSTALL"/ChangeLog
    organize:
      ChangeLog: snap/ChangeLog

  # Get aux scripts so they can be used in other parts. Also, stage
  # packages we rebuild later to get copyright and ensure they are in
  # the manifest.
  stack-snaps-tools:
    plugin: nil
    source: https://git.launchpad.net/~snappy-hwe-team/snappy-hwe-snaps/+git/stack-snaps-tools
    source-type: git
    build-packages:
      - dpkg-dev
      - git
    stage-packages:
      - dnsmasq-base
      - network-manager
    override-build: |
      set -ex
      find "$CRAFT_PART_INSTALL"/ -type f,l \
                -not -path "$CRAFT_PART_INSTALL"/'usr/share/doc/network-manager*' \
                -not -path "$CRAFT_PART_INSTALL"/'usr/share/doc/libnm0*' \
           -and -not -path "$CRAFT_PART_INSTALL"/'usr/share/doc/dnsmasq-base*' \
           -delete
      find "$CRAFT_PART_INSTALL"/ -type d -empty -delete
      mkdir -p "$CRAFT_PART_INSTALL"/build-tools
      cp build-tools/* "$CRAFT_PART_INSTALL"/build-tools
    prime:
      - usr/share/doc/network-manager/copyright
      - usr/share/doc/libnm0/copyright
      - usr/share/doc/dnsmasq-base/copyright
      - usr/share/doc/network-manager/changelog.*
      - usr/share/doc/libnm0/changelog.*
      - usr/share/doc/dnsmasq-base/changelog.*

  dnsmasq:
    after: [ stack-snaps-tools ]
    plugin: make
    source: https://git.launchpad.net/ubuntu/+source/dnsmasq
    source-type: git
    source-branch: applied/ubuntu/noble
    build-packages:
      - build-essential
    make-parameters:
      - PREFIX=/
    override-build: |
      set -ex
      "$CRAFT_STAGE"/build-tools/check-versions dnsmasq-base no
      git apply "$CRAFT_PROJECT_DIR"/snap-patch/dnsmasq.patch
      craftctl default
      # Strip binaries
      find "$CRAFT_PART_INSTALL"/ -executable -type f | xargs file -Ni |
          grep 'application/x-.*executable\|application/x-.*sharedlib' | cut -d: -f1 | xargs strip
    prime:
      - sbin/dnsmasq

  networkmanager:
    after: [ stack-snaps-tools ]
    plugin: autotools
    source: https://git.launchpad.net/ubuntu/+source/network-manager
    source-type: git
    source-branch: applied/ubuntu/noble
    build-packages:
      - gettext
      - libglib2.0-dev
      - ppp-dev
      - libselinux1-dev
      - libaudit-dev
      - libgnutls28-dev
      - uuid-dev
      - systemd-dev
      - libsystemd-dev
      - libudev-dev
      - libgirepository1.0-dev
      - gobject-introspection
      - python3-gi
      - libpsl-dev
      - libcurl4-gnutls-dev
      - gtk-doc-tools
      - libglib2.0-doc
      - libmm-glib-dev
      - libndp-dev
      - libreadline-dev
      - libnewt-dev
      - libteam-dev
      - libjansson-dev
      - libbluetooth-dev
      - valac
      - polkitd
      - libpolkit-gobject-1-dev
      - dbus
      - python3-dbus
      - python3-pexpect
      - iproute2
      - libyaml-dev
      - libnetplan-dev
      - netplan.io
      - intltool
      - libnss3-dev
    autotools-configure-parameters:
      - --prefix=/usr
      - --sysconfdir=/etc
      - --localstatedir=/var
      - --runstatedir=/run
      - --disable-qt
      # dhcp handled by systemd client
      - --with-dhcpcd=no
      - --with-dhclient=no
      - --with-dnsmasq=/snap/$CRAFT_PROJECT_NAME/current/sbin/dnsmasq
      - --with-iptables=/sbin/iptables
      - --with-systemd-journal=yes
      - --libexecdir=/snap/$CRAFT_PROJECT_NAME/current/usr/lib/NetworkManager
      - --with-pppd=/snap/$CRAFT_PROJECT_NAME/current/usr/sbin/pppd
      - --with-pppd-plugin-dir=/snap/$CRAFT_PROJECT_NAME/current/usr/lib/pppd/2.4.9/
      - --with-dnssec-trigger=/usr/lib/dnssec-trigger/dnssec-trigger-script
      - --with-systemdsystemunitdir=/usr/lib/systemd/system
      - --with-udev-dir=/usr/lib/udev
      - --with-crypto=gnutls
      # Explicitly disable session tracking, as it's not applicable on Ubuntu Core
      - --with-session-tracking=no
      - --with-suspend-resume=systemd
      - --with-modem-manager-1
      - --with-nmtui=yes
      - --with-nmcli=yes
      - --with-selinux=no
      - --with-tests
      - --with-libaudit=no
      - --with-dhcpcanon=no
      - --enable-netplan=yes
      # Explicitly disable polkit, as it's not applicable on Ubuntu Core
      - --enable-polkit=no
      - --enable-ppp
      - --enable-ifupdown
      - --enable-introspection
      - --enable-gtk-doc=no
      - --enable-concheck
      - --enable-teamdctl
      - --enable-more-warnings=no
      - --enable-modify-system=no
      - --enable-ovs=no
      - --with-nm-cloud-setup=no
      # Set explicitly flags until lp: #1791946 is solved
      - CFLAGS='-O2 -Wl,-z,relro,-z,now -pie -fpie'
    # Generated netplan patch from https://github.com/slyon/NetworkManager/tree/slyon/backend-1.22.10
    # git format-patch 1.22.10 --full-index --binary --stdout > ../0002-nm-netplan-keyfile.patch -- !(.gitignore)
    override-build: |
      set -ex

      # Download VPN packages here, we cannot just stage as they pull
      # the NM package which will conflict with our build.
      apt download network-manager-openvpn
      dpkg -x network-manager-openvpn_*.deb "$CRAFT_PART_INSTALL"/

      "$CRAFT_STAGE"/build-tools/check-versions network-manager yes
      git config user.email "snapcraft@canonical.com"
      git config user.name "snapcraft"
      git am "$CRAFT_PROJECT_DIR"/snap-patch/networkmanager/*.patch

      # re-create configure
      ./autogen.sh
      craftctl default
      # Strip binaries
      find "$CRAFT_PART_INSTALL"/ -executable -type f | xargs file -Ni |
          grep 'application/x-.*executable\|application/x-.*sharedlib' | cut -d: -f1 | xargs strip

      # Run all tests NetworkManager ships by default
      # Hide the $SNAP env variable during testing, to prevent the netplan CLI
      # from using the snap fallback io.netplan.Netplan.Generate() DBus API as
      # that does not allow to pass a --root-dir argument, needed for testing
      _SNAP=$SNAP
      unset SNAP
      make check
      SNAP=$_SNAP
      unset _SNAP
    stage-packages:
      - libcurl3t64-gnutls
      - libjansson4
      - libpkcs11-helper1t64
      - libldap2
      - libmm-glib0
      - libnewt0.52
      - libnghttp2-14
      - libndp0
      - libpsl5t64
      - librtmp1
      - libsasl2-2
      - libteamdctl0
      - libslang2
      - openvpn
      - ppp

    organize:
      snap/$CRAFT_PROJECT_NAME/current/usr/lib/pppd/2.4.9/nm-pppd-plugin.so: usr/lib/pppd/2.4.9/nm-pppd-plugin.so
      snap/$CRAFT_PROJECT_NAME/current/usr/lib/NetworkManager: usr/lib/NetworkManager
      usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/NetworkManager: usr/lib/NetworkManager

    prime:
      # binaries
      - usr/bin/nmcli
      - usr/bin/nmtui
      - usr/bin/nmtui-connect
      - usr/bin/nmtui-edit
      - usr/bin/nmtui-hostname
      - usr/sbin/pppd
      - usr/lib/*/NetworkManager
      - usr/lib/pppd/2.4.9/nm-pppd-plugin.so
      - usr/lib/NetworkManager
      - usr/sbin/NetworkManager
      - usr/sbin/openvpn
      # configuration
      - etc/NetworkManager/*
      # docs
      - usr/share/doc/libcurl3t64-gnutls/copyright
      - usr/share/doc/libibverbs1/copyright
      - usr/share/doc/libjansson4/copyright
      - usr/share/doc/libldap2/copyright
      - usr/share/doc/libmm-glib0/copyright
      - usr/share/doc/libndp0/copyright
      - usr/share/doc/libnewt0.52/copyright
      - usr/share/doc/libnghttp2-14/copyright
      - usr/share/doc/libnm0/copyright
      - usr/share/doc/libpcap0.8t64/copyright
      - usr/share/doc/libpkcs11-helper1t64/copyright
      - usr/share/doc/libpsl5t64/copyright
      - usr/share/doc/librtmp1/copyright
      - usr/share/doc/libsasl2-2/copyright
      - usr/share/doc/libteamdctl0/copyright
      - usr/share/doc/libslang2/copyright
      - usr/share/doc/openvpn/copyright
      - usr/share/doc/ppp/copyright
      - usr/share/doc/network-manager-openvpn/copyright
      - usr/share/doc/libcurl3t64-gnutls/changelog.*
      - usr/share/doc/libibverbs1/changelog.*
      - usr/share/doc/libjansson4/changelog.*
      - usr/share/doc/libldap2/changelog.*
      - usr/share/doc/libmm-glib0/changelog.*
      - usr/share/doc/libndp0/changelog.*
      - usr/share/doc/libnewt0.52/changelog.*
      - usr/share/doc/libnghttp2-14/changelog.*
      - usr/share/doc/libnm0/changelog.*
      - usr/share/doc/libpcap0.8t64/changelog.*
      - usr/share/doc/libpkcs11-helper1t64/changelog.*
      - usr/share/doc/libpsl5t64/changelog.*
      - usr/share/doc/librtmp1/changelog.*
      - usr/share/doc/libsasl2-2/changelog.*
      - usr/share/doc/libteamdctl0/changelog.*
      - usr/share/doc/libslang2/changelog.*
      - usr/share/doc/openvpn/changelog.*
      - usr/share/doc/ppp/changelog.*
      - usr/share/doc/network-manager-openvpn/changelog.*
      # libraries
      - usr/lib/*/libslang*
      - usr/lib/libnm*
      - usr/lib/*/libcurl-gnutls*
      ## required for teamdctl
      - usr/lib/*/libjansson*
      # For openvpn
      - usr/lib/*/libpkcs11-helper*
      - usr/lib/*/liblber.so.2*
      - usr/lib/*/libldap.so.2*
      - usr/lib/*/libibverbs.so.1*
      - usr/lib/*/libmm-glib*
      - usr/lib/*/libnewt*
      - usr/lib/*/libndp*
      - usr/lib/*/libssh.so.4*
      - usr/lib/*/libnghttp2*
      - usr/lib/*/libpcap*
      - usr/lib/*/libpsl*
      - usr/lib/*/librtmp*
      - usr/lib/*/libsasl2*
      - usr/lib/*/libteamdctl*
      - usr/lib/openvpn/*
      - usr/lib/*/openvpn/plugins/*
      - usr/libexec/*openvpn*
      # unwanted
      ## We don't use dhclient so we don't need this helper
      - -usr/lib/NetworkManager/nm-dhcp-helper
      ## Things we don't support yet and don't have to ship
      - -usr/lib/NetworkManager/1.46.0/libnm-device-plugin-adsl.so
      - -usr/lib/NetworkManager/1.46.0/libnm-device-plugin-bluetooth.so
      ## Some additional build artifacts we do not need
      - -usr/lib/NetworkManager/*/*.la
      - -usr/lib/libnm.la
      - -usr/lib/pkgconfig
