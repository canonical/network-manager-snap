summary: Test NM's OpenVPN plugin

environment:
  ovpn_cfg_p: /var/snap/network-manager/common/default.ovpn

prepare: |
  snap install easy-openvpn-server

restore: |
  snap remove --purge easy-openvpn-server
  rm -f "$ovpn_cfg_p"

execute: |
  . "$SYSTEMSNAPSTESTLIB"/utilities.sh

  # TODO eventually this will not be needed when the store auto-connects it
  snap connect network-manager:network-control

  snap set easy-openvpn-server push-default-gateway=False
  easy-openvpn-server show-client default > "$ovpn_cfg_p"

  # Create NM's connection
  network-manager.nmcli c import type openvpn file "$ovpn_cfg_p"
  network-manager.nmcli c up default
  # tun2 device active (0 and 1 belong to easy-openvpn-server)
  network-manager.nmcli c show --active | grep tun2

  # Ping other end of the tunnel. Note that
  # we could have connected to either tun0 or tun1.
  sudo sysctl net.ipv4.conf.tun2.accept_local=1
  pingOk=no
  for i in {0..1}; do
      sudo sysctl net.ipv4.conf.tun"$i".accept_local=1
      peer_ip=$(ip -4 a show dev tun"$i" primary | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
      if ping -I tun2 -c 1 "$peer_ip"; then
          pingOk=yes
      fi
  done
  if [ "$pingOk" != yes ]; then
      printf "Cannot ping other end of the tunnel\n"
      exit 1
  fi

  network-manager.nmcli c down default
  network-manager.nmcli c del default
